---
default:
  image: alpine:latest
  tags:
    - docker
    - shared
  interruptible: true
  before_script:
    - if [[ ! -d $CI_PROJECT_DIR/.pkg_cache ]] ; then mkdir "$CI_PROJECT_DIR/.pkg_cache" ; fi
    - ln -s "$CI_PROJECT_DIR/.pkg_cache" /etc/apk/cache

stages:
  - prepare
  - lint
  - build
  - deploy
  - cleanup

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .pkg_cache/
    - .packer/
    - infra/.terraform/
    - infra/.terraform.lock.hcl
    - vars/

variables-template:
  stage: prepare
  script:
    - cp -a vars.template vars

.markdownlint:
  stage: lint
  image: registry.gitlab.com/pipeline-components/markdownlint:latest
  script:
    - mdl --style all --warnings .

.markdown-spellcheck:
  stage: lint
  image: registry.gitlab.com/pipeline-components/markdown-spellcheck:latest
  script:
    - mdspell --report '**/*.md'

ansible-lint:
  stage: lint
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  script:
    - ansible-lint -P production

packer-validate:
  stage: lint
  variables:
    PACKER_PLUGIN_PATH: "$CI_PROJECT_DIR/.packer/plugins"
  script:
    - apk add ansible~=5.8.0 packer~=1.8.1
    - packer init -upgrade templates
    - packer validate templates

terraform-validate:
  stage: lint
  image:
    name: docker.io/hashicorp/terraform:1.2.6
    entrypoint: [""]
  script:
    - cd infra
    - terraform init -upgrade
    - terraform validate

.build-templates:
  stage: build
  tags:
    - private-cluster
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    PACKER_PLUGIN_PATH: "$CI_PROJECT_DIR/.packer/plugins"
  script:
    - apk add ansible~=5.8.0 packer~=1.8.1
    - cd templates
    - packer build -only proxmox-iso.rocky8-base .
    - >
      packer build
      -only proxmox-clone.k3s-master,proxmox-clone.k3s-controller,proxmox-clone.k3s-worker .

plan-infrastructure:
  stage: build
  tags:
    - private-cluster
  image:
    name: docker.io/hashicorp/terraform:1.2.6
    entrypoint: [""]
  script:
    - cd infra
    - terraform plan
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/infra/plan.cache
    reports:
      terraform: ${CI_PROJECT_DIR}/infra/plan.json

apply-infrastructure:
  stage: deploy
  tags:
    - private-cluster
  environment:
    name: testing
    url: https://homelab.internal
    on_stop: destroy-infrastructure
  image:
    name: docker.io/hashicorp/terraform:1.2.6
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_BRANCH == 'feature/k8s-rework'
      when: manual
  script:
    - cd infra
    - terraform apply -auto-approve

destroy-infrastructure:
  stage: cleanup
  tags:
    - private-cluster
  environment:
    name: testing
    action: stop
  image:
    name: docker.io/hashicorp/terraform:1.2.6
    entrypoint: [""]
  when: manual
  script:
    - cd infra
    - terraform destroy -auto-approve
