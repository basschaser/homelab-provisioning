---
default:
  image: alpine:latest
  tags:
    - docker
  interruptible: true
  before_script:
    - if [[ ! -d $CI_PROJECT_DIR/.pkg_cache ]] ; then mkdir "$CI_PROJECT_DIR/.pkg_cache" ; fi
    - ln -s "$CI_PROJECT_DIR/.pkg_cache" /etc/apk/cache

stages:
  - lint
  - test
  - deploy

cache:
  paths:
    - .pkg_cache/
    - .packer/
    - deploy/.terraform/
    - deploy/.terraform.lock.hcl

.markdownlint:
  stage: lint
  image: registry.gitlab.com/pipeline-components/markdownlint:latest
  script:
    - mdl --style all --warnings .

.markdown-spellcheck:
  stage: lint
  image: registry.gitlab.com/pipeline-components/markdown-spellcheck:latest
  script:
    - mdspell --report '**/*.md'

.tflint:
  stage: lint
  image: ghcr.io/terraform-linters/tflint:latest
  script:
    - cd deploy
    - tflint --module .

ansible-lint:
  stage: lint
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  script:
    - ansible-lint -P production

.packer-validate:
  stage: test
  variables:
    PACKER_PLUGIN_PATH: "$CI_PROJECT_DIR/.packer/plugins"
  script:
    - apk add ansible~=5.8.0 packer~=1.8.1
    - packer init -upgrade templates
    - packer validate -var-file vars.template/secret.hcl templates

terraform-validate:
  stage: test
  image:
    name: docker.io/hashicorp/terraform:1.2.6
    entrypoint: [""]
  script:
    - cd deploy
    - terraform init -upgrade
    - terraform validate

build-templates:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    PACKER_PLUGIN_PATH: "$CI_PROJECT_DIR/.packer/plugins"
  script:
    - apk add ansible~=5.8.0 packer~=1.8.1
    - cd templates
    - packer build -var-file ../vars.template/secret.hcl -only proxmox-iso.rocky8-base .
    - >
      packer build -var-file secret.pkrvars.hcl
      -only proxmox-clone.k3s-master,proxmox-clone.k3s-worker .

apply-infrastructure:
  stage: deploy
  environment:
    name: production
    url: https://homelab.internal
    on_stop: destroy-infrastructure
  image:
    name: docker.io/hashicorp/terraform:1.2.6
    entrypoint: [""]
  rules:
    # - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == 'testing'
      when: manual
  script:
    - cd deploy
    - terraform apply -auto-approve -var-file $PVE_AUTH -var guest_pubKeyFile=$SSH_PUBKEY

destroy-infrastructure:
  stage: deploy
  environment:
    name: production
    action: stop
  image:
    name: docker.io/hashicorp/terraform:1.2.6
    entrypoint: [""]
  when: manual
  script:
    - cd deploy
    - terraform destroy -auto-approve -var-file $PVE_AUTH -var guest_pubKeyFile=$SSH_PUBKEY
