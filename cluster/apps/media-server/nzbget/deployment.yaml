---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nzbget
  namespace: media-server
  labels:
    app.kubernetes.io/name: nzbget
  annotations:
    ignore-check.kube-linter.io/no-read-only-root-fs: "Unsupported for this app."
    ignore-check.kube-linter.io/run-as-non-root: "Not possible for init job."
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: nzbget
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nzbget
    spec:
      # serviceAccountName: default
      # automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsUser: 106789
        runAsGroup: 109030
        fsGroup: 109030
        seLinuxOptions:
          level: "s0:c123,c456"
      initContainers:
        - name: init
          image: "archlinux:base"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nzbget-config
              mountPath: /configmaps
            - name: nzbget-data
              mountPath: /config
            - name: nzbget-secrets
              mountPath: /secrets
            - name: media
              mountPath: /media
          command: ["/configmaps/init.sh"]
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 125m
              memory: 250Mi
      containers:
        - name: nzbget
          image: "ghcr.io/ralgar/nzbget:21.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: nzbget-http
              containerPort: 6789
              protocol: TCP
          volumeMounts:
            - name: nzbget-data
              mountPath: /config
            - name: media
              mountPath: /media
          resources:
            limits:
              cpu: 2000m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
          # livenessProbe:
          #   exec:
          #     command:
          #     - /usr/bin/env
          #     - bash
          #     - -c
          #     - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while read -d
          #       \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          #   failureThreshold: 5
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6789
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 6789
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          securityContext:
            runAsNonRoot: true
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
      volumes:
        - name: nzbget-config
          configMap:
            name: nzbget-config
            defaultMode: 0777
        - name: nzbget-data
          emptyDir:
            sizeLimit: 1Mi
        - name: nzbget-secrets
          secret:
            secretName: nzbget-secrets
        - name: media
          persistentVolumeClaim:
            claimName: media
