---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: media-server
  labels:
    app.kubernetes.io/name: prowlarr
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: prowlarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prowlarr
    spec:
      # serviceAccountName: default
      # automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsUser: 109696
        runAsGroup: 109696
        fsGroup: 109696
      containers:
        - name: prowlarr
          image: "ghcr.io/onedr0p/prowlarr:1.9.4.4039"
          imagePullPolicy: IfNotPresent
          env:
            - name: PROWLARR__API_KEY
              valueFrom: { secretKeyRef: { name: prowlarr-secrets, key: prowlarr-api-key } }
            - name: PROWLARR__POSTGRES_HOST
              valueFrom: { secretKeyRef: { name: mediasrv-pguser-prowlarr, key: host } }
            - name: PROWLARR__POSTGRES_PORT
              valueFrom: { secretKeyRef: { name: mediasrv-pguser-prowlarr, key: port } }
            - name: PROWLARR__POSTGRES_USER
              valueFrom: { secretKeyRef: { name: mediasrv-pguser-prowlarr, key: user } }
            - name: PROWLARR__POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: mediasrv-pguser-prowlarr, key: password } }
            - name: PROWLARR__POSTGRES_MAIN_DB
              value: prowlarr-main
            - name: PROWLARR__POSTGRES_LOG_DB
              value: prowlarr-log
            - name: PROWLARR__THEME
              value: dark
          ports:
            - name: prowlarr-http
              containerPort: 9696
              protocol: TCP
          volumeMounts:
            - name: prowlarr-data
              mountPath: /config
          livenessProbe:
            exec:
              command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:9696/api/v1/system/status?apiKey=`IFS=\> && while read -d
                \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9696
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 9696
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          securityContext:
            runAsNonRoot: true
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
      volumes:
        - name: prowlarr-data
          emptyDir:
            sizeLimit: 1Gi
