---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media-server
  labels:
    app.kubernetes.io/name: sonarr
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
    spec:
      # serviceAccountName: default
      # automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsUser: 108989
        runAsGroup: 109030
      initContainers:
        - name: sonarr-init
          image: "nouchka/sqlite3:latest"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: sonarr-configmap
              mountPath: /configmaps
            - name: sonarr-data
              mountPath: /config
            - name: sonarr-secrets
              mountPath: /secrets
          command: ["/configmaps/init.sh"]
      containers:
        - name: sonarr
          image: "ghcr.io/onedr0p/sonarr:3.0.9.1549"
          imagePullPolicy: IfNotPresent
          ports:
            - name: sonarr-http
              containerPort: 8989
              protocol: TCP
          volumeMounts:
            - name: sonarr-data
              mountPath: /config
            - name: media
              mountPath: /media
          livenessProbe:
            exec:
              command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while read -d
                \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8989
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8989
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      volumes:
        - name: sonarr-configmap
          configMap:
            name: sonarr-configmap
            defaultMode: 0777
        - name: sonarr-data
          persistentVolumeClaim:
            claimName: sonarr-data
        - name: sonarr-secrets
          secret:
            secretName: sonarr-secrets
        - name: media
          nfs:
            server: 192.168.1.10
            path: /mnt/storage/mediasrv
