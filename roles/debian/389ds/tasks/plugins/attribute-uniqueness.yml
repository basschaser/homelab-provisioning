---
- name: Create Attribute Uniqueness entries
  ldap_entry:
    bind_dn: cn=manager
    bind_pw: "{{ dirsrv_root_pw }}"
    server_uri: "{% if dirsrv_cert_db.stat.exists %}ldaps://{% else %}ldap://{% endif %}"
    validate_certs: no
    dn: "cn={{ attr_uniq }} Attribute Uniqueness,cn=plugins,cn=config"
    objectClass:
      - top
      - extensibleObject
      - nsslapdplugin
    attributes:
      nsslapd-plugin-depends-on-type: database
      nsslapd-pluginDescription: Enforce unique attribute values
      nsslapd-pluginEnabled: "on"
      nsslapd-pluginId: NSUniqueAttr
      nsslapd-pluginInitfunc: NSUniqueAttr_Init
      nsslapd-pluginPath: libattr-unique-plugin
      nsslapd-pluginType: betxnpreoperation
      nsslapd-pluginVendor: 389 Project
      nsslapd-pluginVersion: none
      uniqueness-attribute-name: "{{ attr_uniq }}"
      uniqueness-subtrees: "{{ dirsrv_domain }}"
    state: present
  notify: restart_dirsrv
  loop:
    - uid
    - userid
    - mail
    - uidNumber
    - gidNumber
  loop_control:
    loop_var: attr_uniq

- name: Assert Attribute Uniqueness configuration
  ldap_attrs:
    bind_dn: cn=manager
    bind_pw: "{{ dirsrv_root_pw }}"
    server_uri: "{% if dirsrv_cert_db.stat.exists %}ldaps://{% else %}ldap://{% endif %}"
    validate_certs: no
    dn: "cn={{ attr_uniq }} Attribute Uniqueness,cn=plugins,cn=config"
    attributes:
      nsslapd-pluginEnabled: "on"
      uniqueness-attribute-name: "{{ attr_uniq }}"
      uniqueness-subtrees: "{{ dirsrv_domain }}"
    state: exact
  notify: restart_dirsrv
  loop:
    - uid
    - userid
    - mail
    - uidNumber
    - gidNumber
  loop_control:
    loop_var: attr_uniq
