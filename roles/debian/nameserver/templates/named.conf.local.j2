///////////////////////////////////////////////////////////////
//   /etc/bind/named.conf.local - BIND Local Configuration   //
///////////////////////////////////////////////////////////////

// This BIND instance is configured as a recursive, caching resolver for local networks

{% macro allow_transfer(null) %}
  // Allow zone transfer to slave server(s)
  allow-transfer {
  {% for hostNum in dns.hostNums %}
    {% if loop.index > 1 %}
    {{ net.prefix | ansible.netcommon.nthhost(hostNum) }};
    {% endif %}
  {% endfor %}
  };
{% endmacro %}


// Forward Zone
zone "{{ ansible_domain }}" {
{% if ansible_hostname == 'ns1' %}
  type master;

  // Allowed IPs/ACLs for remote zone updates
  allow-update {
    key "{{ ansible_domain }}.";
  };

  // Allow zone transfer to slave server(s)
  allow-transfer {
  {% for hostNum in dns.hostNums %}
    {% if loop.index > 1 %}
    {{ net.prefix | ansible.netcommon.nthhost(hostNum) }};
    {% endif %}
  {% endfor %}
  };

  // Notify slave server(s) of zone updates
  also-notify {
  {% for hostNum in dns.hostNums %}
    {% if loop.index > 1 %}
    {{ net.prefix | ansible.netcommon.nthhost(dns.hostNums[1]) }};
    {% endif %}
  {% endfor %}
  };

{% elif ansible_hostname >= 'ns2' %}
  type slave;

  // Get zone data from master
  masters {
    {{ net.prefix | ansible.netcommon.nthhost(dns.hostNums[0]) }};
  };
{% endif %}

  // Zone DB path
  file "zone.db.forward";
};

// Reverse Zone
zone "{{ (ansible_default_ipv4.address|split('.'))[0:3]|reverse|join('.') }}.in-addr.arpa" {
{% if ansible_hostname == 'ns1' %}
  type master;

  // Allowed IPs/ACLs for remote zone updates
  allow-update {
    key "{{ ansible_domain }}.";
  };

  // Allow zone transfer to slave server(s)
  allow-transfer {
  {% for hostNum in dns.hostNums %}
    {% if loop.index > 1 %}
    {{ net.prefix | ansible.netcommon.nthhost(hostNum) }};
    {% endif %}
  {% endfor %}
  };

  // Notify slave server(s) of zone updates
  also-notify {
  {% for hostNum in dns.hostNums %}
    {% if loop.index > 1 %}
    {{ net.prefix | ansible.netcommon.nthhost(dns.hostNums[1]) }};
    {% endif %}
  {% endfor %}
  };

{% elif ansible_hostname >= 'ns2' %}
  // Get zone data from master
  type slave;
  masters {
    {{ net.prefix | ansible.netcommon.nthhost(dns.hostNums[0]) }};
  };
{% endif %}

  // Zone DB path
  file "zone.db.reverse";
};

{% if ansible_hostname == 'ns1' %}
include "/etc/bind/tsigkeys.conf";
{% endif %}
