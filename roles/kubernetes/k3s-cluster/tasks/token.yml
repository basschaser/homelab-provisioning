---
- name: Check if node-token exists on the first node
  stat:
    path: "{{ k3s_token_file }}"
  register: k3s_token_file_state

- name: Generate node-token on the first node
  copy:
    content: "{{ lookup('community.general.random_string', length=32) }}"
    dest: "{{ k3s_token_file }}"
    owner: root
    group: root
    mode: 0600
  run_once: true
  when: not k3s_token_file_state.stat.exists

- name: Get node-token from the first node
  slurp:
    src: "{{ k3s_token_file }}"
  run_once: true
  register: k3s_token_base64

- name: Ensure all nodes has the same token
  ansible.builtin.copy:
    content: "{{ k3s_token_base64.content | b64decode }}"
    dest: "{{ k3s_token_file }}"
    owner: root
    group: root
    mode: 0600
